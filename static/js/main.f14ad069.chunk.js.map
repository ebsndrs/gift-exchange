{"version":3,"sources":["interfaces/models/Gender.tsx","helpers/GenderHelper.tsx","components/ParticipantsTableRow.tsx","components/ParticipantsTable.tsx","services/MatchService.tsx","components/Match.tsx","App.tsx","index.tsx"],"names":["Gender","GenderHelper","genderArray","i","genderAsString","this","getGenderAsString","undefined","push","enumObj","name","hasOwnProperty","toUpperCase","slice","ParticipantsTableRow","props","genderHelper","handleNameChange","index","event","target","value","handleHouseholdChange","handleAgeInput","test","console","log","preventDefault","bind","className","type","placeholder","onChange","households","map","household","getGendersAsStringArray","gender","React","Component","ParticipantsTable","addParticipant","participant","age","exclusions","handleParticipantNameChange","newName","handleParticipantHouseholdChange","newHousehold","every","unshift","distinctHouseholds","Array","from","Set","genders","participants","indexOf","onClick","MatchService","rules","enforceHouseholdRule","enforceAgeGroupRule","enforceGenderRule","enforceCircularGiftingRule","enforcePreviousYearsRule","simpleMatch","complexMatch","matches","potentialReceivers","length","receiverIndex","randomIndex","giver","receiver","splice","disallowedIndexes","other","existingReceiverMatch","find","match","Math","ceil","random","floor","includes","Match","App","matchService","state","setState","error","generateMatches","a","async","toggleHouseholdRule","currentState","toggleCircularGiftingRule","toggleGenderRule","togglePreviousYearsRule","mockHouseholds","male","female","previousYears","previousYearsToEnforce","href","id","title","checked","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f14ad069.chunk.js","sourcesContent":["export enum Gender {\r\n  none,\r\n  male,\r\n  female,\r\n  other\r\n}","import { Gender } from \"../interfaces/models/Gender\";\r\n\r\nexport default class GenderHelper {\r\n  getGendersAsStringArray(): string[] {\r\n    let genderArray: string[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      let genderAsString = this.getGenderAsString(i);\r\n      if (genderAsString !== undefined) {\r\n        genderArray.push(genderAsString);\r\n      }\r\n    }\r\n\r\n    return genderArray;\r\n  }\r\n\r\n  getGenderAsString(enumObj: any): string | undefined {\r\n    for (let name in Gender) {\r\n      if (Gender[name] === enumObj && Gender.hasOwnProperty(name)) {\r\n        return `${name[0].toUpperCase()}${name.slice(1)}`;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}","import React from 'react';\r\nimport { ParticipantsTableRowProps } from '../interfaces/props/ParticipantsTableRowProps';\r\nimport GenderHelper from '../helpers/GenderHelper';\r\n\r\nexport default class ParticipantsTableRow extends React.Component<ParticipantsTableRowProps> {\r\n  genderHelper: GenderHelper;\r\n\r\n  constructor(props: ParticipantsTableRowProps) {\r\n    super(props);\r\n\r\n    this.genderHelper = new GenderHelper();\r\n\r\n    this.handleAgeInput = this.handleAgeInput.bind(this);\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return(\r\n      <tr>\r\n        <td><input className=\"input is-small\" type=\"text\" placeholder=\"Name\" onChange={(value) => this.handleNameChange(this.props.index, value)}/></td>\r\n        <td>\r\n          <div className=\"select is-small\">\r\n            <select onChange={(value) => this.handleHouseholdChange(this.props.index, value)}>\r\n              {\r\n                this.props.households.map(household =>\r\n                  <option value={household}>{household}</option>\r\n                )\r\n              }\r\n            </select>\r\n          </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"select is-small\">\r\n            <select>\r\n              {\r\n                this.genderHelper.getGendersAsStringArray().map(gender =>\r\n                  <option>{gender}</option>\r\n                )\r\n              }\r\n            </select>\r\n          </div>\r\n        </td>\r\n        <td><input className=\"input is-small\" type=\"number\" placeholder=\"Age\" onChange={(value) => this.handleAgeInput(value)} /></td>\r\n        <td></td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  handleNameChange = (index: number, event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    this.props.handleNameChange(index, event.target.value);\r\n  }\r\n\r\n  handleHouseholdChange = (index: number, event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    this.props.handleNameChange(index, event.target.value);\r\n  }\r\n\r\n  handleAgeInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const allowedChars = /^\\d+$/;\r\n    if (event.target.value === null || !allowedChars.test(event.target.value)) {\r\n      console.log(\"is null or not digit\");\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport { ParticipantsTableProps } from '../interfaces/props/ParticipantsTableProps';\r\nimport ParticipantsTableRow from './ParticipantsTableRow';\r\nimport GenderHelper from '../helpers/GenderHelper';\r\nimport { Participant } from '../interfaces/models/Participant';\r\n\r\nexport default class ParticipantsTable extends React.Component<ParticipantsTableProps> {\r\n  genderHelper: GenderHelper;\r\n\r\n  constructor(props: ParticipantsTableProps) {\r\n    super(props);\r\n\r\n    this.genderHelper = new GenderHelper();\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    let households = [...this.props.households];\r\n    \r\n    if (households.every(household => household === undefined)) {\r\n      households = [ \"None\" ]\r\n    } else {\r\n      households.unshift(\"None\");\r\n    }\r\n\r\n    const distinctHouseholds = Array.from(new Set(households));\r\n    \r\n    let genders = this.genderHelper.getGendersAsStringArray();\r\n\r\n    return(\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Household</th>\r\n              <th>Gender</th>\r\n              <th>Age</th>\r\n              <th>Exlusions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.participants.map(participant =>\r\n              <ParticipantsTableRow\r\n                index={this.props.participants.indexOf(participant)}\r\n                participant={participant}\r\n                households={distinctHouseholds}\r\n                genders={genders}\r\n                handleNameChange={this.handleParticipantNameChange}\r\n                handleHouseholdChange={this.handleParticipantHouseholdChange}\r\n              />  \r\n            )\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <button className=\"button\" onClick={this.addParticipant}>Add Participant</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addParticipant = (): void => {\r\n    let participant: Participant = {\r\n      name: \"\",\r\n      household: undefined,\r\n      gender: undefined,\r\n      age: undefined,\r\n      exclusions: undefined\r\n    };\r\n\r\n    this.props.addParticipant(participant);\r\n  }\r\n\r\n  handleParticipantNameChange = (index: number, newName: string): void => {\r\n    this.props.handleParticipantNameChange(index, newName);\r\n  }\r\n\r\n  handleParticipantHouseholdChange = (index: number, newHousehold: string): void => {\r\n    this.props.handleParticipantHouseholdChange(index, newHousehold);\r\n  }\r\n}","import { Participant } from \"../interfaces/models/Participant\";\r\nimport { Match } from \"../interfaces/models/Match\";\r\nimport { Rules } from \"../interfaces/models/Rules\";\r\nimport { Gender } from \"../interfaces/models/Gender\";\r\n\r\nexport default class MatchService {\r\n  async generateMatches(participants: Participant[], rules: Rules): Promise<Match[]> {\r\n    if (!rules.enforceHouseholdRule && !rules.enforceAgeGroupRule && !rules.enforceGenderRule && !rules.enforceCircularGiftingRule && !rules.enforcePreviousYearsRule) {\r\n      return this.simpleMatch(participants);\r\n    } else {\r\n      return this.complexMatch(participants, rules);\r\n    }\r\n  }\r\n\r\n  private simpleMatch(participants: Participant[]): Match[] {\r\n    let matches: Match[] = [];\r\n    let potentialReceivers = [...participants];\r\n\r\n    for (let i = 0; i < participants.length; i++) {\r\n      let receiverIndex = this.randomIndex(potentialReceivers.length);\r\n\r\n      while (receiverIndex === i) {\r\n        receiverIndex = this.randomIndex(potentialReceivers.length);\r\n      }\r\n\r\n      matches.push({ giver: participants[i], receiver: potentialReceivers[receiverIndex]});\r\n      potentialReceivers.splice(receiverIndex, 1);\r\n    }\r\n\r\n    return matches;\r\n  }\r\n\r\n  private complexMatch(participants: Participant[], rules: Rules): Match[] {\r\n    let matches: Match[] = [];\r\n    let potentialReceivers = [...participants];\r\n\r\n    for (let i = 0; i < participants.length; i++) {\r\n      let disallowedIndexes: number[] = [];\r\n      disallowedIndexes.push(i);\r\n\r\n      let receiverIndex = this.randomIndex(potentialReceivers.length, disallowedIndexes);\r\n\r\n      if (rules.enforceHouseholdRule) {\r\n        while (participants[i].household === potentialReceivers[receiverIndex].household && disallowedIndexes.length < potentialReceivers.length) {\r\n          disallowedIndexes.push(receiverIndex);\r\n          receiverIndex = this.randomIndex(potentialReceivers.length, disallowedIndexes);\r\n        }\r\n      }\r\n\r\n      if (rules.enforceAgeGroupRule) {\r\n        //enforce age group rule here\r\n      }\r\n\r\n      if (rules.enforceGenderRule) {\r\n        if (participants[i].gender !== Gender.other) {\r\n          while (participants[i].gender === potentialReceivers[receiverIndex].gender && disallowedIndexes.length < potentialReceivers.length) {\r\n            disallowedIndexes.push(receiverIndex);\r\n            receiverIndex = this.randomIndex(potentialReceivers.length, disallowedIndexes);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (rules.enforceCircularGiftingRule) {\r\n        const existingReceiverMatch = matches.find(match => match.giver === potentialReceivers[receiverIndex]);\r\n\r\n        if (existingReceiverMatch !== undefined && existingReceiverMatch.receiver === participants[i] && disallowedIndexes.length < potentialReceivers.length) {\r\n          disallowedIndexes.push(receiverIndex);\r\n          receiverIndex = this.randomIndex(potentialReceivers.length, disallowedIndexes);\r\n        }\r\n      }\r\n\r\n      if (rules.enforcePreviousYearsRule) {\r\n        //enforce previous years rule here\r\n      }\r\n\r\n      if (disallowedIndexes.length > potentialReceivers.length) {\r\n        console.log(\"Match is impossible with supplied rules\");\r\n        return [];\r\n      }\r\n\r\n      matches.push({ giver: participants[i], receiver: potentialReceivers[receiverIndex]});\r\n      potentialReceivers.splice(receiverIndex, 1);\r\n    }\r\n\r\n    return matches;\r\n  }\r\n\r\n  private randomIndex(length: number, disallowedIndexes?: number[]): number {\r\n    length = Math.ceil(length);\r\n    let random = Math.floor(Math.random() * length);\r\n\r\n    if (disallowedIndexes !== undefined) {\r\n      while (disallowedIndexes.includes(random)) {\r\n        random = Math.floor(Math.random() * length)\r\n      }\r\n    }\r\n\r\n    return random;\r\n  }\r\n}","import React from 'react';\r\nimport { MatchProps } from '../interfaces/props/MatchProps';\r\n\r\nexport default class Match extends React.Component<MatchProps> {\r\n  render(): JSX.Element {\r\n    return(\r\n      <div>\r\n        <p>{this.props.match.giver.name} gives to {this.props.match.receiver?.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport 'bulma';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport './App.css';\r\nimport { AppState } from './interfaces/states/AppState';\r\nimport { Participant } from './interfaces/models/Participant';\r\nimport { Gender } from './interfaces/models/Gender';\r\nimport ParticipantsTable from './components/ParticipantsTable';\r\nimport MatchService from './services/MatchService';\r\nimport Match from './components/Match';\r\n\r\nexport default class App extends React.Component<any, AppState> {\r\n  matchService: MatchService;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.matchService = new MatchService();\r\n\r\n    const mockHouseholds: string[] = [\r\n      \"Household 1\",\r\n      \"Household 2\",\r\n      \"Household 3\"\r\n    ];\r\n\r\n    const mockParticipants: Participant[] = [\r\n      {\r\n        name: \"Person 1\",\r\n        age: 19,\r\n        gender: Gender.male,\r\n        household: mockHouseholds[0],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 2\",\r\n        age:59,\r\n        gender: Gender.male,\r\n        household: mockHouseholds[0],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 3\",\r\n        age:14,\r\n        gender: Gender.female,\r\n        household: mockHouseholds[0],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 4\",\r\n        age: 25,\r\n        gender: Gender.other,\r\n        household: mockHouseholds[1],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 5\",\r\n        age: 73,\r\n        gender:  Gender.female,\r\n        household: mockHouseholds[2],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 6\",\r\n        age: 32,\r\n        gender: Gender.male,\r\n        household: mockHouseholds[1],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 7\",\r\n        age: 53,\r\n        gender: Gender.male,\r\n        household: mockHouseholds[1],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 8\",\r\n        age: 45,\r\n        gender: Gender.female,\r\n        household: mockHouseholds[0],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 9\",\r\n        age: 20,\r\n        gender: Gender.female,\r\n        household: mockHouseholds[1],\r\n        exclusions: undefined\r\n      },\r\n      {\r\n        name: \"Person 10\",\r\n        age: 29,\r\n        gender: Gender.other,\r\n        household: mockHouseholds[0],\r\n        exclusions: undefined\r\n      }\r\n    ];\r\n\r\n    this.state = {\r\n      participants: [],\r\n      households: mockHouseholds,\r\n      matches: [],\r\n      previousYears: [],\r\n      rules: {\r\n        enforceHouseholdRule: false,\r\n        enforceAgeGroupRule: false,\r\n        enforceGenderRule: false,\r\n        enforceCircularGiftingRule: false,\r\n        enforcePreviousYearsRule: false,\r\n        previousYearsToEnforce: 3\r\n      }\r\n    };\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return(\r\n      <div className=\"App\">\r\n        <section className=\"hero is-dark\">\r\n          <div className=\"hero-body\">\r\n            <nav className=\"level\">\r\n              <div className=\"level-left\">\r\n                <div className=\"level-item\">\r\n                  <h1 className=\"title\">Secret Santa</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"level-right\">\r\n                <div className=\"level-item\">\r\n                  <span className=\"icon is-large\">\r\n                    <a href=\"https://github.com/ebsndrs/secret-santa\" className=\"github-link\">\r\n                      <i className=\"fab fa-2x fa-github\"></i>\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </section>\r\n        <section className=\"section\" id=\"participantsSection\">\r\n          <div className=\"box\">\r\n            <h1 className=\"title is-4\">Participants</h1>\r\n            <h1 className=\"subtitle is-6\">Add, remove, edit, or import participants</h1>\r\n\r\n            <ParticipantsTable\r\n              households={this.state.households}\r\n              participants={this.state.participants}\r\n              addParticipant={this.addParticipant}\r\n              handleParticipantNameChange={this.handleParticipantNameChange}\r\n              handleParticipantHouseholdChange={this.handleParticipantHouseholdChange}\r\n            />\r\n          </div>\r\n        </section>\r\n        <footer className=\"footer\">\r\n          <div className=\"content has-text-centered\">\r\n            <p><strong>Secret Santa</strong> by <a href=\"http://ebsndrs.io\">Edward Sanders</a></p>\r\n          </div>\r\n        </footer>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <section className=\"section\">\r\n          <div className=\"columns\">\r\n            <div className=\"column\">\r\n              <div className=\"panel\">\r\n                <p className=\"panel-heading\">Rules</p>\r\n                <div className=\"panel-block\">\r\n                  <div className=\"container\">\r\n                    <div className=\"level\">\r\n                      <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                          <h5 className=\"title is-5\">Prevent Household Matches <sup className=\"tooltip\"><span title=\"This rule prevents matches from occuring within the same household. Enabling ensures givers will only give to those outside of their household.\" className=\"icon is-small\"><i className=\"far fa-question-circle\"></i></span></sup></h5>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                          <button className=\"button is-white is-rounded\" onClick={this.toggleHouseholdRule}>\r\n                            <span className=\"icon is-medium\">\r\n                              <i className={this.state.rules.enforceHouseholdRule ? \"far fa-2x fa-check-circle has-text-success\" : \"far fa-2x fa-times-circle has-text-danger\"}></i>\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"level\">\r\n                      <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                          <div className=\"content\">\r\n                            <h5 className=\"title is-5\">Prevent Circular Matches <sup className=\"tooltip\"><span title=\"This rule prevents participants from having a circular gift exchange, where a giver and receiver are giving and receiver from each other. Enabling this rule ensures nobody will give to the person from which they receive, and vice versa.\" className=\"icon is-small\"><i className=\"far fa-question-circle\"></i></span></sup></h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                          <button className=\"button is-white is-rounded\" onClick={this.toggleCircularGiftingRule}>\r\n                            <span className=\"icon is-medium\">\r\n                              <i className={this.state.rules.enforceCircularGiftingRule ? \"far fa-2x fa-check-circle has-text-success\" : \"far fa-2x fa-times-circle has-text-danger\"}></i>\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"level\">\r\n                      <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                          <h5 className=\"title is-5\">Prevent Same Gender Matches <sup className=\"tooltip\"><span title=\"This rule prevents matches from occuring between genders. This only prevents those with their gender defined as male or female from giving to each other; those with the 'other' gender are not affected\" className=\"icon is-small\"><i className=\"far fa-question-circle\"></i></span></sup></h5>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"level-right\">\r\n                        <div className=\"level-item\">\r\n                          <button className=\"button is-white is-rounded\" onClick={this.toggleGenderRule}>\r\n                            <span className=\"icon is-medium\">\r\n                              <i className={this.state.rules.enforceGenderRule ? \"far fa-2x fa-check-circle has-text-success\" : \"far fa-2x fa-times-circle has-text-danger\"}></i>\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"panel\">\r\n                <p className=\"panel-heading\">Participants</p>\r\n                <div className=\"panel-block\">\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"panel\">\r\n                <p className=\"panel-heading\">Matches</p>\r\n                <div className=\"panel-block\">\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n          <div>\r\n            <h1 className=\"title\">Rules</h1>\r\n            <div className=\"field\">\r\n              <label className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={this.state.rules.enforceHouseholdRule} onClick={this.toggleHouseholdRule} />\r\n                Household Rule\r\n              </label>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={this.state.rules.enforceCircularGiftingRule} onClick={this.toggleCircularGiftingRule} />\r\n                Circular Gifting Rule\r\n              </label>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={this.state.rules.enforceGenderRule} onClick={this.toggleGenderRule} />\r\n                Gender Rule\r\n              </label>\r\n            </div>\r\n            {/* <div className=\"field\">\r\n              <label className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={this.state.rules.enforcePreviousYearsRule} onClick={this.togglePreviousYearsRule} />\r\n                Previous Years Rule\r\n              </label>\r\n            </div> */}\r\n          </div>\r\n          <div>\r\n            <h2 className=\"title\">Households</h2>\r\n            {this.state.households.map(item => <p>{item}</p>)}\r\n          </div>\r\n          <div>\r\n            <h2 className=\"title\">Participants</h2>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Household</th>\r\n                  <th>Gender</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  this.state.participants.map(participant =>\r\n                    <tr>\r\n                      <td>{participant.name}</td>\r\n                      <td>{participant.household}</td>\r\n                      {/* <td>{this.getGender(participant.gender)}</td> */}\r\n                    </tr>\r\n                  )\r\n                }\r\n              </tbody>\r\n            </table>\r\n            {/* <Participants participants={this.state.participants} /> */}\r\n          </div>\r\n        <button className=\"button\" onClick={this.generateMatches}>Generate Matches</button>\r\n        {this.state.matches.map(item => <Match match={item} />)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addParticipant = (participant: Participant): void => {\r\n    let participants = this.state.participants;\r\n    participants.push(participant);\r\n    this.setState({\r\n      participants: participants\r\n    });\r\n  }\r\n\r\n  handleParticipantNameChange = (index: number, newName: string): void => {\r\n    let participants = this.state.participants;\r\n    participants[index].household = newName;\r\n    this.setState({\r\n      participants: participants\r\n    });\r\n  }\r\n\r\n  handleParticipantHouseholdChange = (index: number, newHousehold: string): void => {\r\n    let participants = this.state.participants;\r\n\r\n    if (newHousehold === \"None\") {\r\n      participants[index].household = undefined;\r\n    } else if (!this.state.households.includes(newHousehold)) {\r\n      console.error(\"Household does not exist\");\r\n    } else {\r\n      participants[index].household = newHousehold;\r\n      this.setState({\r\n        participants: participants\r\n      });\r\n    }\r\n  }\r\n\r\n  generateMatches = async (): Promise<void> => {\r\n    let matches = await this.matchService.generateMatches(this.state.participants, this.state.rules);\r\n\r\n    this.setState({\r\n      matches: matches\r\n    });\r\n  }\r\n\r\n  toggleHouseholdRule  = (): void => {\r\n    const currentState = this.state;\r\n    currentState.rules.enforceHouseholdRule = !currentState.rules.enforceHouseholdRule;\r\n    this.setState({\r\n      rules: currentState.rules\r\n    });\r\n  }\r\n\r\n  toggleCircularGiftingRule = (): void => {\r\n    const currentState = this.state;\r\n    currentState.rules.enforceCircularGiftingRule = !currentState.rules.enforceCircularGiftingRule;\r\n    this.setState({\r\n      rules: currentState.rules\r\n    });\r\n  }\r\n\r\n  toggleGenderRule = (): void => {\r\n    const currentState = this.state;\r\n    currentState.rules.enforceGenderRule = !currentState.rules.enforceGenderRule;\r\n    this.setState({\r\n      rules: currentState.rules\r\n    });\r\n  }\r\n\r\n  togglePreviousYearsRule = (): void => {\r\n    const currentState = this.state;\r\n    currentState.rules.enforcePreviousYearsRule = !currentState.rules.enforcePreviousYearsRule;\r\n    this.setState({\r\n      rules: currentState.rules\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}