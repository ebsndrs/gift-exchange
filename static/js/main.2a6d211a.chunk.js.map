{"version":3,"sources":["components/PeopleRow.tsx","components/People.tsx","components/RuleToggle.tsx","matching.ts","components/Spinner.tsx","components/Transition.tsx","components/Matches.tsx","App.tsx","index.tsx"],"names":["PeopleRow","props","useState","isEditFormActive","setIsEditFormActive","person","editForm","setEditForm","isEditFormSubmitButtonDisabled","setIsEditFormSubmitButtonDisabled","useEffect","input","document","getElementById","focus","setSelectionRange","value","length","shouldEditFormSubmitButtonBeDisabled","name","trim","household","people","some","p","submitEditForm","editPerson","onIsEditFormToggled","pressInputKey","event","charCode","preventDefault","className","htmlFor","id","onChange","e","target","onKeyPress","placeholder","list","households","map","key","onClick","title","type","fill","viewBox","fillRule","d","clipRule","disabled","isOtherEditFormActive","removePerson","People","Set","setPerson","isAddButtonDisabled","setIsAddButtonDisabled","isClearButtonDisabled","setIsClearButtonDisabled","isEditFormOpen","setIsEditFormOpen","trimmedName","trimmedHousehold","shouldAddButtonBeDisabled","shouldClearButtonBeDisabled","addPerson","onEditFormToggled","state","clearPeople","RuleToggle","display","role","toggle","index","tabIndex","aria-checked","toggled","aria-hidden","getRandomFromZero","max","prohibitedNumbers","result","Math","floor","random","includes","factorializeN","n","checkIfMatchesAreIdentical","first","second","sort","a","b","giver","localeCompare","i","receiver","getMatch","rules","permutation","peopleCopy","factorial","push","splice","getPermutation","matrix","getAdjacencyMatrix","matches","getMaximumBipartiteMatching","adjacencyMatrix","j","k","lastGiver","lastReceiver","generateMatch","validateMatches","expectedLength","areMatchesValid","match","filter","m","preventSameHousehold","giverIndex","receiverIndex","isMatchGood","giverCount","receiverCount","matchR","Array","u","seen","getBipartiteMatching","vertex","v","Spinner","Transition","enterClasses","enter","split","enterFromClasses","enterFrom","enterToClasses","enterTo","leaveClasses","leave","leaveFromClasses","leaveFrom","leaveToClasses","leaveTo","CSSTransition","unmountOnExit","in","show","addEndListener","node","done","addEventListener","onEnter","classList","add","onEntering","remove","onEntered","onExit","onExiting","onExited","children","Matches","isExportDropdownVisible","setIsExportDropdownVisible","copyToClipboard","clipboardString","join","navigator","clipboard","writeText","href","encodeURI","csv","forEach","giverName","replace","receiverName","encodeCsv","download","refreshMatches","click","toggleRule","areMatchesLoading","getMatchingErrorMessage","errorKey","App","firstRun","useRef","localStorageState","localStorage","getItem","parsedState","JSON","parse","matchPermutation","invalidMatchesError","setPeople","setRules","setMatches","setMatchPermutation","setAreMatchesLoading","setAreMatchesValid","setErrorKey","generateMatches","current","checkIfMatchingIsPossible","maxPermutations","isValidMatch","newMatches","cache","setItem","stringify","useLayoutEffect","xmlns","newPerson","findIndex","undefined","ReactDOM","render"],"mappings":"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","file":"static/js/main.2a6d211a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PeopleRowProps } from '../types';\r\n\r\nexport default function PeopleRow(props: PeopleRowProps) {\r\n  const [isEditFormActive, setIsEditFormActive] = useState(false);\r\n  const [editForm, setEditForm] = useState(props.person);\r\n  const [isEditFormSubmitButtonDisabled, setIsEditFormSubmitButtonDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isEditFormActive) {\r\n      const input = document.getElementById('edit-name') as HTMLInputElement;\r\n\r\n      input?.focus();\r\n      input?.setSelectionRange(input.value.length, input.value.length);\r\n    }\r\n  }, [isEditFormActive]);\r\n\r\n  useEffect(() => {\r\n    const shouldEditFormSubmitButtonBeDisabled =\r\n      editForm.name.trim() === '' ||\r\n      (editForm.name === props.person.name && editForm.household === props.person.household) ||\r\n      (editForm.name.trim() !== props.person.name && props.people.some((p) => p.name === editForm.name.trim()));\r\n\r\n    setIsEditFormSubmitButtonDisabled(shouldEditFormSubmitButtonBeDisabled);\r\n  }, [editForm, props.person, props.people]);\r\n\r\n  const activateEditForm = () => {\r\n    setIsEditFormActive(true);\r\n    props.onIsEditFormToggled(true);\r\n  };\r\n\r\n  const submitEditForm = () => {\r\n    props.editPerson(props.person.name, editForm);\r\n    setIsEditFormActive(false);\r\n    props.onIsEditFormToggled(false);\r\n  };\r\n\r\n  const cancelEditForm = () => {\r\n    setEditForm(props.person);\r\n    setIsEditFormActive(false);\r\n    props.onIsEditFormToggled(false);\r\n  };\r\n\r\n  const changeName = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setEditForm({\r\n      ...editForm,\r\n      name: event.target.value,\r\n    });\r\n  };\r\n\r\n  const changeHousehold = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setEditForm({\r\n      ...editForm,\r\n      household: event.target.value,\r\n    });\r\n  };\r\n\r\n  const pressInputKey = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13 && !isEditFormSubmitButtonDisabled) {\r\n      event.preventDefault();\r\n      submitEditForm();\r\n    }\r\n  };\r\n\r\n  return isEditFormActive ? (\r\n    <tr className=\"bg-white\">\r\n      <td className=\"px-6 py-2 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900\">\r\n        <label htmlFor=\"name\" className=\"sr-only\">\r\n          Name\r\n        </label>\r\n        <div className=\"relative rounded-md shadow-sm\">\r\n          <input\r\n            id=\"edit-name\"\r\n            value={editForm.name}\r\n            onChange={(e) => changeName(e)}\r\n            onKeyPress={(e) => pressInputKey(e)}\r\n            className=\"form-input block w-full sm:text-sm sm:leading-5\"\r\n            placeholder=\"Name\"\r\n          />\r\n        </div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">\r\n        <label htmlFor=\"name\" className=\"sr-only\">\r\n          Name\r\n        </label>\r\n        <div className=\"relative rounded-md shadow-sm\">\r\n          <input\r\n            value={editForm.household}\r\n            onChange={(e) => changeHousehold(e)}\r\n            onKeyPress={(e) => pressInputKey(e)}\r\n            id=\"edit-household\"\r\n            list=\"households\"\r\n            className=\"form-input block w-full sm:text-sm sm:leading-5\"\r\n            placeholder=\"Household\"\r\n          />\r\n          <datalist id=\"households\">\r\n            {props.households.map((household) => (\r\n              <option key={household} value={household} />\r\n            ))}\r\n          </datalist>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className=\"flex-shrink-0 text-right\">\r\n          <span className=\"relative z-0 inline-flex shadow-sm\">\r\n            <button\r\n              onClick={cancelEditForm}\r\n              title=\"Cancel\"\r\n              type=\"button\"\r\n              className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\"\r\n            >\r\n              <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                  clipRule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n            <button\r\n              onClick={submitEditForm}\r\n              disabled={isEditFormSubmitButtonDisabled}\r\n              title=\"Submit\"\r\n              type=\"button\"\r\n              className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n            >\r\n              <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                  clipRule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <tr className=\"bg-white\">\r\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 font-medium text-gray-900\">{props.person.name}</td>\r\n      <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-500\">{props.person.household}</td>\r\n      <td>\r\n        <div className=\"flex-shrink-0 text-right\">\r\n          <span className=\"relative z-0 inline-flex shadow-sm\">\r\n            <button\r\n              id=\"edit-person-button\"\r\n              onClick={activateEditForm}\r\n              disabled={props.isOtherEditFormActive}\r\n              title=\"Edit\"\r\n              type=\"button\"\r\n              className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n            >\r\n              <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"></path>\r\n              </svg>\r\n            </button>\r\n            <button\r\n              id=\"remove-person-button\"\r\n              onClick={() => props.removePerson(props.person.name)}\r\n              disabled={props.isOtherEditFormActive}\r\n              title=\"Remove\"\r\n              type=\"button\"\r\n              className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n            >\r\n              <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                  clipRule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PeopleProps, Person } from '../types';\r\nimport PeopleRow from './PeopleRow';\r\n\r\nexport default function People(props: PeopleProps) {\r\n  const households = [...new Set(props.people.map((person) => person.household))];\r\n\r\n  const [person, setPerson] = useState<Person>({\r\n    name: '',\r\n    household: '',\r\n  });\r\n  const [isAddButtonDisabled, setIsAddButtonDisabled] = useState(true);\r\n  const [isClearButtonDisabled, setIsClearButtonDisabled] = useState(true);\r\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const trimmedName = person.name.trim();\r\n    const trimmedHousehold = person.household.trim();\r\n\r\n    const shouldAddButtonBeDisabled =\r\n      trimmedName === '' ||\r\n      props.people.some((p) => p.name === trimmedName) ||\r\n      props.people.length + 1 > 170 ||\r\n      isEditFormOpen;\r\n    const shouldClearButtonBeDisabled = (trimmedName === '' && trimmedHousehold === '') || isEditFormOpen;\r\n\r\n    setIsAddButtonDisabled(shouldAddButtonBeDisabled);\r\n    setIsClearButtonDisabled(shouldClearButtonBeDisabled);\r\n  }, [person, props.people, isEditFormOpen]);\r\n\r\n  const clearInput = () => {\r\n    setPerson({\r\n      name: '',\r\n      household: '',\r\n    });\r\n  };\r\n\r\n  const changeName = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setPerson({\r\n      ...person,\r\n      name: event.target.value,\r\n    });\r\n  };\r\n\r\n  const pressInputKey = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.charCode === 13 && !isAddButtonDisabled) {\r\n      event.preventDefault();\r\n      addPerson();\r\n      document.getElementById('name')?.focus();\r\n    }\r\n  };\r\n\r\n  const changeHousehold = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setPerson({\r\n      ...person,\r\n      household: event.target.value,\r\n    });\r\n  };\r\n\r\n  const addPerson = () => {\r\n    props.addPerson(person);\r\n\r\n    setPerson({\r\n      name: '',\r\n      household: '',\r\n    });\r\n  };\r\n\r\n  const onEditFormToggled = (state: boolean) => {\r\n    setIsEditFormOpen(state);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-4 sm:my-0 bg-white overflow-hidden shadow rounded-lg\">\r\n      <div className=\"border-b border-gray-200 px-4 py-5 sm:px-6\">\r\n        <div className=\"-ml-4 -mt-2 flex items-center justify-between flex-wrap sm:flex-no-wrap\">\r\n          <div className=\"ml-4 mt-2\">\r\n            <h1 className=\"text-lg leading-6 font-medium text-gray-900\">Participants</h1>\r\n          </div>\r\n          <div className=\"ml-4 mt-2 flex-shrink-0\">\r\n            <span className=\"relative z-0 inline-flex shadow-sm\">\r\n              <button\r\n                onClick={props.clearPeople}\r\n                disabled={props.people.length === 0 || isEditFormOpen}\r\n                title=\"Clear\"\r\n                type=\"button\"\r\n                className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n              >\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 py-5 sm:p-6\">\r\n        <div className=\"grid grid-cols-1 row-gap-6 col-gap-4 sm:grid-cols-5\">\r\n          <div className=\"sm:col-span-2\">\r\n            <label htmlFor=\"name\" className=\"sr-only\">\r\n              Name\r\n            </label>\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n              <input\r\n                value={person.name}\r\n                onChange={(e) => changeName(e)}\r\n                onKeyPress={(e) => pressInputKey(e)}\r\n                id=\"name\"\r\n                className=\"form-input block w-full sm:text-sm sm:leading-5\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"sm:col-span-2\">\r\n            <label htmlFor=\"household\" className=\"sr-only\">\r\n              Household\r\n            </label>\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n              <input\r\n                value={person.household}\r\n                onChange={(e) => changeHousehold(e)}\r\n                onKeyPress={(e) => pressInputKey(e)}\r\n                id=\"household\"\r\n                list=\"households\"\r\n                className=\"form-input block w-full sm:text-sm sm:leading-5\"\r\n                placeholder=\"Household\"\r\n              />\r\n              <datalist id=\"households\">\r\n                {households.map((household) => (\r\n                  <option key={household} value={household} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n          </div>\r\n          <div className=\"sm: col-span-1 text-left sm:text-right\">\r\n            <span className=\"relative z-0 inline-flex shadow-sm mt-1\">\r\n              <button\r\n                onClick={clearInput}\r\n                disabled={isClearButtonDisabled}\r\n                title=\"Clear\"\r\n                type=\"button\"\r\n                className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n              >\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n              <button\r\n                onClick={addPerson}\r\n                disabled={isAddButtonDisabled}\r\n                title=\"Add\"\r\n                type=\"button\"\r\n                className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n              >\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-6 flex flex-col\">\r\n          <div className=\"-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\r\n            {props.people.length > 0 ? (\r\n              <div className=\"align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200\">\r\n                <table className=\"min-w-full\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Name\r\n                      </th>\r\n                      <th className=\"pl-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Household\r\n                      </th>\r\n                      <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50\"></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {props.people.map((person) => (\r\n                      <PeopleRow\r\n                        key={person.name}\r\n                        person={person}\r\n                        people={props.people}\r\n                        households={households}\r\n                        isOtherEditFormActive={isEditFormOpen}\r\n                        removePerson={props.removePerson}\r\n                        editPerson={props.editPerson}\r\n                        onIsEditFormToggled={onEditFormToggled}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ) : (\r\n              <div className=\"py-6 text-center\">Once you start adding participants, they'll appear here.</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { RuleToggleProps } from '../types';\r\n\r\nexport default function RuleToggle(props: RuleToggleProps) {\r\n  return (\r\n    <div className=\"flex justify-between py-1\">\r\n      <label htmlFor=\"prevent-same-household-toggle\" className=\"text-sm\">\r\n        {props.display}\r\n      </label>\r\n      <span\r\n        id=\"prevent-same-household-toggle\"\r\n        role=\"checkbox\"\r\n        onClick={() => props.toggle(props.index)}\r\n        tabIndex={0}\r\n        aria-checked={props.toggled}\r\n        className={`${\r\n          props.toggled ? 'bg-indigo-600' : 'bg-gray-200'\r\n        } ml-10 relative inline-block flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:shadow-outline`}\r\n      >\r\n        <span\r\n          aria-hidden=\"true\"\r\n          className={`${\r\n            props.toggled ? 'translate-x-5' : 'translate-x-0'\r\n          } inline-block h-5 w-5 rounded-full bg-white shadow transform transition ease-in-out duration-200`}\r\n        ></span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import { Person, Match, Rules } from './types';\r\n\r\n/*\r\n  Gets an error message based on a key\r\n*/\r\nexport function getMatchingErrorMessage(key: string) {\r\n  switch (key) {\r\n    case 'LowerThanMinimum':\r\n      return 'Add two or more people to get started!';\r\n    case 'GreaterThanMaximum':\r\n      return '170 is the maximum amount of participants you can add.';\r\n    case 'NoMatch':\r\n      return 'No valid matching set could be generated with your inputs. Change something to try again!';\r\n    default:\r\n      return 'Something went wrong. Try reloading the page or resetting the app.';\r\n  }\r\n}\r\n\r\n/*\r\n  Gets a random integer that is not the prohibited number\r\n*/\r\nexport function getRandomFromZero(max: number, prohibitedNumbers: number[]) {\r\n  max = Math.floor(max);\r\n  let result: number;\r\n\r\n  do {\r\n    result = Math.floor(Math.random() * max);\r\n  } while (prohibitedNumbers.includes(result));\r\n\r\n  return result;\r\n}\r\n\r\n/*\r\n  Returns true if a full match set is actually possible with the given rules\r\n*/\r\nexport function checkIfMatchingIsPossible(people: Person[], rules: Rules): boolean {\r\n  const matrix = getAdjacencyMatrix(people, rules);\r\n\r\n  const maximumMatches = getMaximumBipartiteMatching(matrix, people.length, people.length);\r\n\r\n  return maximumMatches === people.length;\r\n}\r\n\r\n/*\r\n  Gets the possible number of permutations of a collection of size n\r\n  Returns the maximum JavaScript integer value if n! is greater than 18\r\n  This is because 19! is higher than the maximum JavaScript integer\r\n*/\r\nexport function factorializeN(n: number): number {\r\n  if (n < 0) {\r\n    return -1;\r\n  } else if (n === 0) {\r\n    return 1;\r\n  } else {\r\n    return n * factorializeN(n - 1);\r\n  }\r\n}\r\n\r\n/*\r\n  Checks if two supplied match arrays are identical\r\n*/\r\nexport function checkIfMatchesAreIdentical(first: Match[], second: Match[]) {\r\n  if (first.length !== second.length) {\r\n    return false;\r\n  }\r\n\r\n  first.sort((a, b) => a.giver.name.localeCompare(b.giver.name));\r\n  second.sort((a, b) => a.giver.name.localeCompare(b.giver.name));\r\n\r\n  for (let i = 0; i < first.length; i++) {\r\n    if (first[i].receiver.name !== second[i].receiver.name) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/*\r\n  Gets a match set from an array of people.\r\n  Specifically, it generates a specific permutation (n) of an array of people.\r\n  With that permutation and the rules defined by the front-end, it generates an adjacency matrix.\r\n  This matrix determines which matches *can* allowed.\r\n\r\n  Using this matrix, it determines whether or not a fully matched set can be made.\r\n  If certain rules prevent a full match set from being made,\r\n  this function will return an empty set to signify that a match was impossible with the supplied inputs.\r\n  In this case, the caller will likely try a different permutation until a match is found.\r\n\r\n  If a fully matched set can be made, it generates the bipartite matching set and returns it.\r\n*/\r\nexport function getMatch(n: number, people: Person[], rules: Rules): Match[] {\r\n  //get n permutation of people\r\n  const permutation = getPermutation(n, people);\r\n\r\n  //build adjacency matrix with that permutation, households, rules\r\n  const matrix = getAdjacencyMatrix(permutation, rules);\r\n\r\n  const maxMatches = getMaximumBipartiteMatching(matrix, people.length, people.length);\r\n\r\n  let matches: Match[] = [];\r\n\r\n  if (maxMatches === people.length) {\r\n    matches = generateMatch(permutation, matrix);\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\n/*\r\n  Builds the match set from a given permutation of people and adjacency matrix\r\n\r\n  Essentially, it takes each person in the permutation, uses the adjacency matrix\r\n  to identify the next person in the permutation that is matchable, and creates the link\r\n\r\n  It then resets every entry in the matrix for both of those people to 0, to show that they\r\n  are now unavailable for matching\r\n*/\r\nfunction generateMatch(people: Person[], adjacencyMatrix: number[][]): Match[] {\r\n  let matches: Match[] = [];\r\n\r\n  //iterate through the givers to assign each one a match\r\n  for (let i = 0; i < people.length; i++) {\r\n    const giver = people[i];\r\n\r\n    for (let j = 0; j < people.length; j++) {\r\n      const receiver = people[j];\r\n\r\n      if (adjacencyMatrix[i][j] > 0 && adjacencyMatrix[j][i] > 0) {\r\n        matches.push({ giver: giver, receiver: receiver });\r\n        adjacencyMatrix[i][j] = 0;\r\n        adjacencyMatrix[j][i] = 0;\r\n        for (let k = 0; k < adjacencyMatrix[i].length; k++) {\r\n          adjacencyMatrix[i][k] = 0;\r\n          adjacencyMatrix[k][i] = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (matches.length < people.length) {\r\n    const lastGiver = people[people.length - 1];\r\n    const lastReceiver = people[0];\r\n\r\n    matches.push({ giver: lastGiver, receiver: lastReceiver });\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\nexport function validateMatches(matches: Match[], expectedLength: number, rules: Rules): boolean {\r\n  let areMatchesValid = true;\r\n\r\n  //matches length must be equal to people length\r\n  if (matches.length !== expectedLength) {\r\n    areMatchesValid = false;\r\n  } else {\r\n    for (let i = 0; i < matches.length; i++) {\r\n      const match = matches[i];\r\n\r\n      //one cannot give to themself\r\n      if (match.giver.name === match.receiver.name) {\r\n        areMatchesValid = false;\r\n        break;\r\n      }\r\n\r\n      //if there's more than one of the same giver, it's invalid\r\n      if (matches.filter((m) => m.giver.name === match.giver.name).length > 1) {\r\n        areMatchesValid = false;\r\n        break;\r\n      }\r\n\r\n      //if there's more than one of the same receiver, it's invalid\r\n      if (matches.filter((m) => m.receiver.name === match.receiver.name).length > 1) {\r\n        areMatchesValid = false;\r\n        break;\r\n      }\r\n\r\n      if (rules.preventSameHousehold) {\r\n        if (match.giver.household !== '' || match.receiver.household !== '') {\r\n          if (match.giver.household === match.receiver.household) {\r\n            areMatchesValid = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return areMatchesValid;\r\n}\r\n\r\n/*\r\n  Gets the specific permutation \"n\" of the array \"people\".\r\n  Specifically, the order of permutations as defined in Heap's Algorithm.\r\n*/\r\nfunction getPermutation(n: number, people: Person[]) {\r\n  let peopleCopy = [...people]; // copy of the set\r\n  let length = people.length; // length of the set\r\n  let result: Person[] = []; // return value, empty set\r\n  let factorial: number = factorializeN(length); //possible permutations\r\n\r\n  // if the permutation number is within range\r\n  if (n >= 0 && n < factorial) {\r\n    // start with the empty set, loop for length elements\r\n    for (result = []; length > 0; length--) {\r\n      // determine the next element:\r\n      // there are factorial/length subsets for each possible element,\r\n      factorial /= length;\r\n      // a simple division gives the leading element index\r\n      let index = Math.floor(n / factorial);\r\n\r\n      result.push(peopleCopy.splice(index, 1)[0]);\r\n      // reduce permutation for the remaining subset:\r\n      // compute the remainder of the above division\r\n      n %= factorial;\r\n      // extract the index-th element from peopleCopy and push it at the end of result\r\n    }\r\n  }\r\n  // return the permutated set or empty set if permutation is out of range\r\n  return result;\r\n}\r\n\r\n/*\r\n  Uses the supplied parameters to build an adjacency matrix that determines whether a match can be made.\r\n  An adjacency matrix is a data structure that signals whether two objects in a graph are \"adjacent\",\r\n  or linked by a vertex.\r\n  In our use case, if two people are adjacent, they are able to be matched. In the simplest case (no rules),\r\n  every object is adjacent to every object other than itself.\r\n  The various rules that prevent certain matches can make two objects non-adjacent.\r\n\r\n  In this implementation, our adjacency matrix is a two-dimensional array on integers.\r\n  Each dimension is the same length as the original array.\r\n  For every person, we check our rules against every person to determine\r\n  if a match can be made. If it passes all the rules, the value of the cell in the matrix that represents\r\n  the intersection of those two people is iterated.\r\n\r\n  This generated matrix is then used to actually create the matches between people.\r\n  */\r\nexport function getAdjacencyMatrix(people: Person[], rules: Rules): number[][] {\r\n  let matrix: number[][] = [];\r\n\r\n  if (people.length === 0) {\r\n    return matrix;\r\n  }\r\n\r\n  //build out the empty matrix\r\n  for (let i = 0; i < people.length; i++) {\r\n    matrix.push([]);\r\n    for (let j = 0; j < people.length; j++) {\r\n      matrix[i].push(0);\r\n    }\r\n  }\r\n\r\n  //iterate through the givers one by one\r\n  for (let giverIndex = 0; giverIndex < people.length; giverIndex++) {\r\n    const giver = people[giverIndex];\r\n\r\n    //now iterate through potential receivers and determine if they can match\r\n    for (let receiverIndex = 0; receiverIndex < people.length; receiverIndex++) {\r\n      const receiver = people[receiverIndex];\r\n\r\n      let isMatchGood = true;\r\n\r\n      //people can't give to themselves\r\n      if (giver.name === receiver.name) {\r\n        isMatchGood = false;\r\n      }\r\n\r\n      //if the rules prevent the same household, match on that only if both households are not the default\r\n      if (rules.preventSameHousehold) {\r\n        if (giver.household !== '' || receiver.household !== '') {\r\n          if (giver.household === receiver.household) {\r\n            isMatchGood = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isMatchGood) {\r\n        matrix[giverIndex][receiverIndex]++;\r\n        matrix[receiverIndex][giverIndex]++;\r\n      }\r\n    }\r\n  }\r\n\r\n  return matrix;\r\n}\r\n\r\n/*\r\n  Determines the maximum number of matches than can be theoretically made\r\n  for a supplied adjacency matrix.\r\n\r\n  This is important because if an adjacency matrix was generated with rules\r\n  that prevent a complete match set (for example, if 2 people in the same\r\n  household were in the list, but the rules prevented same household giving),\r\n  then this function show that a match set is impossible, so we don't go to the\r\n  trouble of actually attempting to build the match set.\r\n*/\r\nexport function getMaximumBipartiteMatching(adjacencyMatrix: number[][], giverCount: number, receiverCount: number) {\r\n  let matchR = Array(receiverCount);\r\n\r\n  for (let i = 0; i < receiverCount; ++i) {\r\n    matchR[i] = -1;\r\n  }\r\n\r\n  let result = 0;\r\n  for (let u = 0; u < giverCount; u++) {\r\n    let seen: boolean[] = Array(receiverCount);\r\n    for (let i = 0; i < receiverCount; ++i) {\r\n      seen[i] = false;\r\n    }\r\n\r\n    if (getBipartiteMatching(giverCount, receiverCount, adjacencyMatrix, u, seen, matchR)) {\r\n      result++;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/*\r\n  A DFS based recursive function that returns true only if a match for the supplied vertex is possible\r\n  Used when calculating the number of potential matches.\r\n*/\r\nfunction getBipartiteMatching(\r\n  giverCount: number,\r\n  receiverCount: number,\r\n  adjacencyMatrix: number[][],\r\n  vertex: number,\r\n  seen: boolean[],\r\n  matchR: number[]\r\n): boolean {\r\n  //try every giver one by one\r\n  for (let v = 0; v < receiverCount; v++) {\r\n    if (adjacencyMatrix[vertex][v] > 0 && !seen[v]) {\r\n      seen[v] = true;\r\n\r\n      if (matchR[v] < 0 || getBipartiteMatching(giverCount, receiverCount, adjacencyMatrix, matchR[v], seen, matchR)) {\r\n        matchR[v] = vertex;\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Spinner() {\r\n  return <div className=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-8 w-8\"></div>;\r\n}\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { TransitionProps } from '../types';\r\n\r\nexport default function Transition(props: TransitionProps) {\r\n  const enterClasses = props.enter.split(' ');\r\n  const enterFromClasses = props.enterFrom.split(' ');\r\n  const enterToClasses = props.enterTo.split(' ');\r\n  const leaveClasses = props.leave.split(' ');\r\n  const leaveFromClasses = props.leaveFrom.split(' ');\r\n  const leaveToClasses = props.leaveTo.split(' ');\r\n\r\n  return (\r\n    <CSSTransition\r\n      unmountOnExit\r\n      in={props.show}\r\n      addEndListener={(node, done) => {\r\n        node.addEventListener('transitionend', done, false);\r\n      }}\r\n      onEnter={(node) => {\r\n        node.classList.add(...enterClasses, ...enterFromClasses);\r\n      }}\r\n      onEntering={(node) => {\r\n        node.classList.remove(...enterFromClasses);\r\n        node.classList.add(...enterToClasses);\r\n      }}\r\n      onEntered={(node) => {\r\n        node.classList.remove(...enterToClasses, ...enterClasses);\r\n      }}\r\n      onExit={(node) => {\r\n        node.classList.add(...leaveClasses, ...leaveFromClasses);\r\n      }}\r\n      onExiting={(node) => {\r\n        node.classList.remove(...leaveFromClasses);\r\n        node.classList.add(...leaveToClasses);\r\n      }}\r\n      onExited={(node) => {\r\n        node.classList.remove(...leaveToClasses, ...leaveClasses);\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CSSTransition>\r\n  );\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { MatchesProps } from '../types';\r\nimport RuleToggle from './RuleToggle';\r\nimport { getMatchingErrorMessage } from '../matching';\r\nimport Spinner from './Spinner';\r\nimport Transition from './Transition';\r\n\r\nexport default function Matches(props: MatchesProps) {\r\n  const [isExportDropdownVisible, setIsExportDropdownVisible] = useState(false);\r\n\r\n  const copyToClipboard = async () => {\r\n    const clipboardString = props.matches\r\n      .map((match) => `${match.giver.name} gives to ${match.receiver.name}.`)\r\n      .join('\\n');\r\n\r\n    await navigator.clipboard.writeText(clipboardString);\r\n\r\n    setIsExportDropdownVisible(false);\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    const hiddenLink = document.getElementById('csv-download') as HTMLAnchorElement;\r\n    hiddenLink.click();\r\n  };\r\n\r\n  const encodeCsv = () => {\r\n    let csv = 'Giver,Receiver\\n';\r\n    props.matches.forEach((match) => {\r\n      const giverName = match.giver.name.replace(',', '\\\\,');\r\n      const receiverName = match.receiver.name.replace(',', '\\\\,');\r\n\r\n      csv += `${giverName},${receiverName}\\n`;\r\n    });\r\n\r\n    return csv;\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-4 sm:my-0 bg-white overflow-hidden shadow rounded-lg\">\r\n      <a\r\n        className=\"hidden\"\r\n        id=\"csv-download\"\r\n        href={`data:text/csv;charset=utf-8,${encodeURI(encodeCsv())}`}\r\n        download=\"gift_exchange.csv\"\r\n        target=\"_blank\"\r\n      ></a>\r\n      <div className=\"border-b border-gray-200 px-4 py-5 sm:px-6\">\r\n        <div className=\"-ml-4 -mt-2 flex items-center justify-between flex-wrap sm:flex-no-wrap\">\r\n          <div className=\"ml-4 mt-2\">\r\n            <h1 className=\"text-lg leading-6 font-medium text-gray-900\">Results</h1>\r\n          </div>\r\n          <div className=\"ml-4 mt-2 flex-shrink-0\">\r\n            <span className=\"relative z-10 inline-flex shadow-sm\">\r\n              <button\r\n                onClick={props.refreshMatches}\r\n                disabled={!props.areMatchesValid}\r\n                title=\"Refresh matches\"\r\n                type=\"button\"\r\n                className=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n              >\r\n                <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n              <span className=\"-ml-px relative block\">\r\n                <button\r\n                  onClick={() => setIsExportDropdownVisible(!isExportDropdownVisible)}\r\n                  disabled={!props.areMatchesValid}\r\n                  title=\"Export matches\"\r\n                  type=\"button\"\r\n                  className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150 disabled:text-gray-300 disabled:cursor-not-allowed\"\r\n                >\r\n                  <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" className=\"w-5 h-5\">\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n                      clipRule=\"evenodd\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n                <Transition\r\n                  show={isExportDropdownVisible}\r\n                  enter=\"transition ease-out duration-100\"\r\n                  enterFrom=\"transform opacity-0 scale-95\"\r\n                  enterTo=\"transform opacity-100 scale-100\"\r\n                  leave=\"transition ease-in duration-75\"\r\n                  leaveFrom=\"transform opacity-100 scale-100\"\r\n                  leaveTo=\"transform opacity-0 scale-95\"\r\n                >\r\n                  <div className=\"origin-top-right absolute right-0 mt-2 -mr-1 w-40 rounded-md shadow-lg\">\r\n                    <div className=\"rounded-md bg-white shadow-xsleft\">\r\n                      <button\r\n                        onClick={copyToClipboard}\r\n                        disabled={props.matches.length === 0}\r\n                        className=\"w-full block px-4 py-2 text-sm leading-5 text-left text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:bg-gray-100 focus:text-gray-900 disabled:cursor-not-allowed\"\r\n                      >\r\n                        Copy to clipboard\r\n                      </button>\r\n                      <button\r\n                        onClick={exportToCsv}\r\n                        disabled={props.matches.length === 0}\r\n                        className=\"w-full block px-4 py-2 text-sm leading-5 text-left text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:bg-gray-100 focus:text-gray-900 disabled:cursor-not-allowed\"\r\n                      >\r\n                        Export to CSV\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </Transition>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 py-5 sm:p-6\">\r\n        <div>\r\n          <RuleToggle\r\n            display=\"Prevent Same Household\"\r\n            index=\"preventSameHousehold\"\r\n            toggled={props.rules.preventSameHousehold}\r\n            toggle={props.toggleRule}\r\n          />\r\n        </div>\r\n        {props.areMatchesLoading ? (\r\n          <div className=\"mt-6 h-full flex justify-center items-center\">\r\n            <Spinner />\r\n          </div>\r\n        ) : props.areMatchesValid ? (\r\n          <div className=\"mt-6 flex flex-col\">\r\n            <div className=\"-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\r\n              <div className=\"align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200\">\r\n                <table className=\"min-w-full\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Giver\r\n                      </th>\r\n                      <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Receiver\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {props.matches.map((match) => (\r\n                      <tr key={match.giver.name} className=\"bg-white\">\r\n                        <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-900\">\r\n                          {match.giver.name}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-no-wrap text-sm leading-5 text-gray-900\">\r\n                          {match.receiver.name}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-6 w-full text-sm\">\r\n            <div className=\"rounded-md bg-red-50 p-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <svg className=\"h-5 w-5 text-red-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm leading-5 font-medium text-red-800\">\r\n                    {getMatchingErrorMessage(props.errorKey)}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport People from './components/People';\r\nimport Matches from './components/Matches';\r\nimport { Rules, Person, Match, StateCache } from './types';\r\nimport {\r\n  getMatch,\r\n  getRandomFromZero,\r\n  checkIfMatchingIsPossible,\r\n  checkIfMatchesAreIdentical,\r\n  factorializeN,\r\n  validateMatches,\r\n} from './matching';\r\nimport './tailwind.css';\r\n\r\nexport default function App() {\r\n  const firstRun = useRef(true);\r\n\r\n  const localStorageState = localStorage.getItem('state');\r\n  const parsedState: StateCache =\r\n    localStorageState !== null\r\n      ? JSON.parse(localStorageState)\r\n      : {\r\n          people: [],\r\n          matches: [],\r\n          rules: { preventSameHousehold: false },\r\n          matchPermutation: 0,\r\n          areMatchesValid: false,\r\n          invalidMatchesError: 'LowerThanMinimum',\r\n        };\r\n\r\n  const [people, setPeople] = useState<Person[]>(parsedState.people);\r\n  const [rules, setRules] = useState<Rules>(parsedState.rules);\r\n  const [matches, setMatches] = useState<Match[]>(parsedState.matches);\r\n  const [matchPermutation, setMatchPermutation] = useState(parsedState.matchPermutation);\r\n  const [areMatchesLoading, setAreMatchesLoading] = useState(false);\r\n  const [areMatchesValid, setAreMatchesValid] = useState(parsedState.areMatchesValid);\r\n  const [errorKey, setErrorKey] = useState(parsedState.invalidMatchesError);\r\n\r\n  const generateMatches = () => {\r\n    //don't generate matches on initial render. If matches were retrieved\r\n    //from local storage, we want those to be the state. If no matches were retrieved,\r\n    //this function wouldn't do anything anyway.\r\n    if (firstRun.current) {\r\n      firstRun.current = false;\r\n      return;\r\n    }\r\n\r\n    setAreMatchesLoading(true);\r\n\r\n    if (people.length < 2) {\r\n      setMatches([]);\r\n      setAreMatchesValid(false);\r\n      setErrorKey('LowerThanMinimum');\r\n    } else if (people.length > 170) {\r\n      setMatches([]);\r\n      setAreMatchesValid(false);\r\n      setErrorKey('GreaterThanMaximum');\r\n    } else if (checkIfMatchingIsPossible(people, rules)) {\r\n      const maxPermutations = factorializeN(people.length);\r\n      let isValidMatch = false;\r\n      let newMatches: Match[] = [];\r\n      let random: number = 0;\r\n\r\n      //brute force it until we find a valid match set\r\n      //the more people, the less likely a collision will occur\r\n      do {\r\n        random = getRandomFromZero(maxPermutations, [matchPermutation]);\r\n        newMatches = getMatch(random, people, rules);\r\n\r\n        //the matches must be valid and not be the same as the last generated matches\r\n        isValidMatch = validateMatches(newMatches, people.length, rules);\r\n\r\n        if (people.length > 2) {\r\n          isValidMatch = isValidMatch && !checkIfMatchesAreIdentical(matches, newMatches);\r\n        }\r\n      } while (!isValidMatch);\r\n\r\n      //sort the new matches by first name for display\r\n      newMatches.sort((first, second) => first.giver.name.localeCompare(second.giver.name));\r\n\r\n      setMatches(newMatches);\r\n      setMatchPermutation(random);\r\n      setAreMatchesValid(true);\r\n      setErrorKey('');\r\n    } else {\r\n      setMatches([]);\r\n      setAreMatchesValid(false);\r\n      setErrorKey('NoMatch');\r\n    }\r\n\r\n    setAreMatchesLoading(false);\r\n  };\r\n\r\n  const toggleRule = (name: string) => {\r\n    rules[name] = !rules[name];\r\n    setRules({ ...rules });\r\n  };\r\n\r\n  const addPerson = (person: Person) => {\r\n    person.name = person.name.trim();\r\n    person.household = person.household.trim();\r\n\r\n    const isValid = person.name !== '' && !people.some((p) => p.name === person.name);\r\n\r\n    if (isValid) {\r\n      setPeople([...people, person]);\r\n    }\r\n  };\r\n\r\n  const editPerson = (name: string, newPerson: Person) => {\r\n    newPerson.name = newPerson.name.trim();\r\n    newPerson.household = newPerson.household.trim();\r\n\r\n    const isValid = people.filter((p) => p.name === name).length === 1;\r\n\r\n    if (isValid) {\r\n      const index = people.findIndex((p) => p.name === name);\r\n      people.splice(index, 1, newPerson);\r\n      setPeople([...people]);\r\n    }\r\n  };\r\n\r\n  const removePerson = (name: string) => {\r\n    const index = people.findIndex((p) => p.name === name);\r\n\r\n    if (people[index] !== undefined) {\r\n      people.splice(index, 1);\r\n      setPeople([...people]);\r\n    }\r\n  };\r\n\r\n  const resetPeople = () => {\r\n    setPeople([]);\r\n  };\r\n\r\n  const cacheState = () => {\r\n    const cache: StateCache = {\r\n      people: people,\r\n      matches: matches,\r\n      rules: rules,\r\n      matchPermutation: matchPermutation,\r\n      areMatchesValid: areMatchesValid,\r\n      invalidMatchesError: errorKey,\r\n    };\r\n\r\n    localStorage.setItem('state', JSON.stringify(cache));\r\n  };\r\n\r\n  useEffect(cacheState);\r\n\r\n  useLayoutEffect(generateMatches, [people, rules]);\r\n\r\n  return (\r\n    <div className=\"px-4 py-5 sm:flex justify-center\">\r\n      <div className=\"max-w-screen-xl\">\r\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:p-6 flex justify-between flex-row\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900 sm:text-3xl leading-9 \">Gift Exchange</h1>\r\n            </div>\r\n            <div>\r\n              <a href=\"https://github.com/ebsndrs/gift-exchange\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\" className=\"h-9 w-9\">\r\n                  <title>GitHub icon</title>\r\n                  <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\r\n                </svg>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"space-y-4 sm:py-4 sm:space-y-0 sm:space-x-4 sm:flex sm:flex-row\">\r\n          <People\r\n            people={people}\r\n            addPerson={addPerson}\r\n            editPerson={editPerson}\r\n            removePerson={removePerson}\r\n            clearPeople={resetPeople}\r\n          />\r\n          <Matches\r\n            rules={rules}\r\n            matches={matches}\r\n            areMatchesLoading={areMatchesLoading}\r\n            areMatchesValid={areMatchesValid}\r\n            errorKey={errorKey}\r\n            toggleRule={toggleRule}\r\n            refreshMatches={generateMatches}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}